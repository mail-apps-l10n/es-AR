typeError=Error: 
typeWarning=Advertencia: 
typeNetwork=Red: 
typeException=Excepción:  
typeCssParser=CSS Parser: 
typeStrict=Advertencia estricta: 
msgCategory=Categoría: 
errFile=Archivo fuente: %S
errLine=Línea: %S
errLineCol=Línea: %S, Columna: %S
errCode=Código fuente:
jsWorkspaceTitle=JS Workspace
btnHide=Ocultar
btnPrefs=Preferenciass
categoryPage=Página:
categoryConsole=Consola:
btnMutation=Mutación de DOM
tipMutation=Toggle DOM Mutation event logging
btnPageNet=Red
tipPageNet=Registrar accesos de red
btnPageCSS=CSS
tipPageCSS=Registrar errores de parseo CSS
btnPageJS=JS
tipPageJS=Registrar excepciones de JavaScript
btnConsoleErrors=Errores
tipConsoleErrors=Registrar llamadas a console.error()
btnConsoleInfo=Información
tipConsoleInfo=Registrar llamadas a console.info()
btnConsoleWarnings=Advertencias
tipConsoleWarnings=Registrar llamadas a console.warn()
btnConsoleLog=Registro
tipConsoleLog=Registrar llamadas a console.log()
btnGlobal=Mensajes globales
tipGlobal=Toggle Global Message logging
localConsole=Consola local
itemClear=Limpiar consola
stringFilter=Filtro
close.button=Cerrar
close.accesskey=C
update.button=Actualizar
update.accesskey=u
# LOCALIZATION NOTE FOR `jsPropertyTitle` AND `jsPropertyInspectTitle`:
#
# The "PropertyPanel" is used to display a JS object to the user.
# If it is clear which object is being inspected (e.g., window, document object)
# the title of the panel is based on the `jsPropertyInspectTitle` string.
# If it isn't clear which object is being inspected, the `jsPropertyTitle` string
# gets used. This can be the case when the user logs an object to the WebConsole
# output using the console.log(aObjectToInspect) method.
#
# You can find a screenshot of the PropertyPanel here:
#   https://bug585030.bugzilla.mozilla.org/attachment.cgi?id=464034
jsPropertyTitle=Inspector de objetos
# LOCALIZATION NOTE FOR `jsPropertyInspectTitle`:
#
# The %S is replaced by the evaluated code the user clicked on in the console.
#
# Example: The user executed `window.document` in the WebConsole. The `document`
# object is written to the output. If the user clicks on the `document` output
# in the console, a PropertyPanel will show up. The title of the PropertyPanel
# is set to `Inspect: window.document` because the clicked `document` object was
# evaluated based on the `window.document` string.
jsPropertyInspectTitle=Inspeccionar: %S
copyCmd.label=Copiar
copyCmd.accesskey=C

